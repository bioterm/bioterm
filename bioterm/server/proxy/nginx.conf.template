user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
	include       /etc/nginx/mime.types;
	default_type  application/octet-stream;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
		      '$status $body_bytes_sent "$http_referer" '
		      '"$http_user_agent" "$http_x_forwarded_for"';

	access_log  /var/log/nginx/access.log  main;

	sendfile        on;
	#tcp_nopush     on;

	keepalive_timeout  65;

	#gzip  on;
	server_tokens off;

	### GENERAL SETTINGS ###
	# INCLUDING CERTBOT REQUIRED SETTING

	server {
	    listen 80;
	    server_name ${NGINX_PRIMARY_DOMAIN} ${ELN_PUBLIC_DOMAIN} ${AUTH_PUBLIC_DOMAIN} ${GRAFANA_PUBLIC_DOMAIN} ${APP_PUBLIC_DOMAIN} ${API_PUBLIC_DOMAIN} ${TELEPORT_PUBLIC_DOMAIN};
	    server_tokens off;

	    location /.well-known/acme-challenge/ {
		root /var/www/certbot;
	    }

		location /metrics {
			stub_status on;
			access_log off;
			allow 172.16.0.0/12; # allow access to this resource for docker containers on same host
			deny all;
		}

	    location / {
		return 301 https://$host$request_uri;
	    }
	}

	server {
	    listen 443 ssl;
	    server_name ${NGINX_PRIMARY_DOMAIN};
	    server_tokens off;

	    ssl_certificate /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/fullchain.pem;
	    ssl_certificate_key /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/privkey.pem;
	    include /etc/letsencrypt/options-ssl-nginx.conf;
	    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	    location / {
		proxy_pass ${NGINX_PROXY_PASS};
		proxy_set_header    Host                $http_host;
		proxy_set_header    X-Real-IP           $remote_addr;
		proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
	    }
	}

	### ELN SECTION ###

	server {
	    server_name ${ELN_PUBLIC_DOMAIN};

	    listen 443 ssl http2;
	    listen [::]:443 http2 ssl;
	    ssl_certificate /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/fullchain.pem;
	    ssl_certificate_key /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/privkey.pem;

	    #access_log /var/log/nginx/elab.example.org.log proxy;
		resolver 127.0.0.11 valid=30s;

	    location / {
			set $eln_upstream http://elabftw:443;
			proxy_pass       $eln_upstream;
			proxy_set_header Host      $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# add this if nginx is terminating TLS
			proxy_set_header X-Forwarded-Proto $scheme;
	    }
	}

	### AUTHENTIK SECTION ###

	# Upstream where your authentik server is hosted.
	upstream authentik {
		server ${AUTH_PUBLIC_DOMAIN};
		# Improve performance by keeping some connections alive.
		keepalive 10;
	}

	# Upgrade WebSocket if requested, otherwise use keepalive
	map $http_upgrade $connection_upgrade_keepalive {
		default upgrade;
		''      '';
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 http2 ssl;

		server_name ${AUTH_PUBLIC_DOMAIN};
		ssl_certificate /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/fullchain.pem;
	    ssl_certificate_key /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/privkey.pem;
		resolver 127.0.0.11 valid=30s;

		location / {
			set $authentik_upstream https://authentik:9443;
			proxy_pass $authentik_upstream;
			proxy_http_version 1.1;

			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
			proxy_set_header Host $host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade_keepalive;

			add_header       Set-Cookie $auth_cookie;
			auth_request_set $auth_cookie $upstream_http_set_cookie;
			# allow authentik in iframe
			add_header		 Content-Security-Policy "frame-ancestors https://*.${NGINX_PRIMARY_DOMAIN}";

		}

	}

	### GRAFANA SECTION

	server {
		listen 443 ssl http2;
		listen [::]:443 http2 ssl;

		server_name ${GRAFANA_PUBLIC_DOMAIN};
		ssl_certificate /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/fullchain.pem;
	    ssl_certificate_key /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/privkey.pem;
		resolver 127.0.0.11 valid=30s;
		location / {
			set $grafana_upstream http://grafana:3001;
			proxy_pass $grafana_upstream;
			proxy_set_header Host $http_host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
		}

	}

	### APP SECTION

	server {
		listen 443 ssl http2;
		listen [::]:443 http2 ssl;
		server_name ${APP_PUBLIC_DOMAIN};
		ssl_certificate /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/privkey.pem;

		resolver 127.0.0.11 valid=30s;
		location / {
			set $app_upstream http://bioterm-webui:8081;
			proxy_pass $app_upstream;
			# proxy_pass http://host.docker.internal:8081/;
			proxy_set_header Host $http_host;
                        proxy_set_header Upgrade $http_upgrade;
                        proxy_set_header Connection "Upgrade";
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
	}


	### API SECTION

	server {
		listen 443 ssl http2;
		listen [::]:443 http2 ssl;

		proxy_busy_buffers_size   512k;
		proxy_buffers   4 512k;
		proxy_buffer_size   256k;

		server_name ${API_PUBLIC_DOMAIN};
		ssl_certificate /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/fullchain.pem;
	    ssl_certificate_key /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/privkey.pem;
		resolver 127.0.0.11 valid=30s;
		location / {
			set $api_upstream http://bioterm-api:8001;
			proxy_pass $api_upstream;
			#proxy_pass http://host.docker.internal:8001;
			proxy_http_version 1.1;
			proxy_set_header Host $http_host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		}

	}

	### TELEPORT SECTION
	server {
		server_name ${TELEPORT_PUBLIC_DOMAIN};
		client_max_body_size 1024M;

		listen [::]:443 ssl;
		listen 443 ssl;
		ssl_certificate /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/${NGINX_PRIMARY_DOMAIN}/privkey.pem;

		# keep alive for longer than 60s, to use the console reasonably
		proxy_read_timeout 3000;
		proxy_connect_timeout 3000;
		proxy_send_timeout 3000;

		resolver 127.0.0.11 valid=30s;

		location / {
				set $teleport_upstream https://teleport:3080;
        		proxy_set_header Host $http_host;
        		proxy_pass $teleport_upstream;
        		proxy_set_header Upgrade $http_upgrade;
        		proxy_set_header Connection "Upgrade";
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-Real-IP $remote_addr;
		}
	}
}
