# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2023.5.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class EventActions(str, Enum):
    """
    * `login` - Login * `login_failed` - Login Failed * `logout` - Logout * `user_write` - User Write * `suspicious_request` - Suspicious Request * `password_set` - Password Set * `secret_view` - Secret View * `secret_rotate` - Secret Rotate * `invitation_used` - Invite Used * `authorize_application` - Authorize Application * `source_linked` - Source Linked * `impersonation_started` - Impersonation Started * `impersonation_ended` - Impersonation Ended * `flow_execution` - Flow Execution * `policy_execution` - Policy Execution * `policy_exception` - Policy Exception * `property_mapping_exception` - Property Mapping Exception * `system_task_execution` - System Task Execution * `system_task_exception` - System Task Exception * `system_exception` - System Exception * `configuration_error` - Configuration Error * `model_created` - Model Created * `model_updated` - Model Updated * `model_deleted` - Model Deleted * `email_sent` - Email Sent * `update_available` - Update Available * `custom_` - Custom Prefix
    """

    """
    allowed enum values
    """
    LOGIN = 'login'
    LOGIN_FAILED = 'login_failed'
    LOGOUT = 'logout'
    USER_WRITE = 'user_write'
    SUSPICIOUS_REQUEST = 'suspicious_request'
    PASSWORD_SET = 'password_set'
    SECRET_VIEW = 'secret_view'
    SECRET_ROTATE = 'secret_rotate'
    INVITATION_USED = 'invitation_used'
    AUTHORIZE_APPLICATION = 'authorize_application'
    SOURCE_LINKED = 'source_linked'
    IMPERSONATION_STARTED = 'impersonation_started'
    IMPERSONATION_ENDED = 'impersonation_ended'
    FLOW_EXECUTION = 'flow_execution'
    POLICY_EXECUTION = 'policy_execution'
    POLICY_EXCEPTION = 'policy_exception'
    PROPERTY_MAPPING_EXCEPTION = 'property_mapping_exception'
    SYSTEM_TASK_EXECUTION = 'system_task_execution'
    SYSTEM_TASK_EXCEPTION = 'system_task_exception'
    SYSTEM_EXCEPTION = 'system_exception'
    CONFIGURATION_ERROR = 'configuration_error'
    MODEL_CREATED = 'model_created'
    MODEL_UPDATED = 'model_updated'
    MODEL_DELETED = 'model_deleted'
    EMAIL_SENT = 'email_sent'
    UPDATE_AVAILABLE = 'update_available'
    CUSTOM = 'custom_'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of EventActions from a JSON string"""
        return cls(json.loads(json_str))


