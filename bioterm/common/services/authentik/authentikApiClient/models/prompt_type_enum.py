# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2023.5.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class PromptTypeEnum(str, Enum):
    """
    * `text` - Text: Simple Text input * `text_area` - Text area: Multiline Text Input. * `text_read_only` - Text (read-only): Simple Text input, but cannot be edited. * `text_area_read_only` - Text area (read-only): Multiline Text input, but cannot be edited. * `username` - Username: Same as Text input, but checks for and prevents duplicate usernames. * `email` - Email: Text field with Email type. * `password` - Password: Masked input, multiple inputs of this type on the same prompt need to be identical. * `number` - Number * `checkbox` - Checkbox * `radio-button-group` - Fixed choice field rendered as a group of radio buttons. * `dropdown` - Fixed choice field rendered as a dropdown. * `date` - Date * `date-time` - Date Time * `file` - File: File upload for arbitrary files. File content will be available in flow context as data-URI * `separator` - Separator: Static Separator Line * `hidden` - Hidden: Hidden field, can be used to insert data into form. * `static` - Static: Static value, displayed as-is. * `ak-locale` - authentik: Selection of locales authentik supports
    """

    """
    allowed enum values
    """
    TEXT = 'text'
    TEXT_AREA = 'text_area'
    TEXT_READ_ONLY = 'text_read_only'
    TEXT_AREA_READ_ONLY = 'text_area_read_only'
    USERNAME = 'username'
    EMAIL = 'email'
    PASSWORD = 'password'
    NUMBER = 'number'
    CHECKBOX = 'checkbox'
    RADIO_MINUS_BUTTON_MINUS_GROUP = 'radio-button-group'
    DROPDOWN = 'dropdown'
    DATE = 'date'
    DATE_MINUS_TIME = 'date-time'
    FILE = 'file'
    SEPARATOR = 'separator'
    HIDDEN = 'hidden'
    STATIC = 'static'
    AK_MINUS_LOCALE = 'ak-locale'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of PromptTypeEnum from a JSON string"""
        return cls(json.loads(json_str))


